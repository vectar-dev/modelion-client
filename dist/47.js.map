{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/input-shims-4f0dbb39.js"],"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","tx","ownerDocument","dir","style","pointerEvents","transform","clone","get","delete","remove","SKIP_SELECTOR","calcScrollData","inputRect","contentRect","keyboardHeight","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","safeAreaTop","distanceToBottom","Math","min","distanceToTop","desiredScrollAmount","round","scrollAmount","duration","abs","scrollDuration","max","scrollPadding","inputSafeY","jsSetFocus","contentEl","footerEl","scrollData","scrollContentTimeout_1","scrollContent_1","doubleKeyboardEventListener_1","scrollEl","totalScrollAmount","this","_a","label","itemEl","closest","getBoundingClientRect","defaultView","innerHeight","getScrollData","focus","window","undefined","clearTimeout","removeEventListener","scrollByPoint","sent","addEventListener","getScrollElement","scrollHeight","clientHeight","scrollTop","type","setTimeout","hasPointerMoved","threshold","startCoord","endCoord","deltaX","x","deltaY","y","setScrollPadding","tagName","parentElement","el","timer","setProperty","startInputShims","config","doc","document","getNumber","scrollAssist","getBoolean","hideCaret","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","inputRoot","rmFn","componentOnReady","shadowRoot","querySelector","scrollHideCaret","shouldHideCaret","onBlur","showCaret","enableHideCaretOnScroll","coord","touchStart","ev","touchEnd","preventDefault","stopPropagation","enableScrollAssist","focused","didScroll","onScroll","onFocusin","onTouchend","active","matches","tapped","target","blur","enableInputBlurring","onFocusout","enableScrollPadding","_i","inputs_1","length","detail","fn","unregisterInput"],"mappings":"2FAAA,2EAEIA,EAAW,IAAIC,QACfC,EAAgB,SAAUC,EAAaC,EAASC,EAAgBC,QACzC,IAAnBA,IAA6BA,EAAiB,GAC9CN,EAASO,IAAIJ,KAAiBE,IAG9BA,EACAG,EAASL,EAAaC,EAASE,GAG/BG,EAAYN,EAAaC,KAG7BM,EAAY,SAAUC,GACtB,OAAOA,IAAUA,EAAMC,cAAcC,eAErCL,EAAW,SAAUL,EAAaC,EAASE,GAU3C,IAAIQ,EAAWV,EAAQW,WAEnBC,EAAWZ,EAAQa,WAAU,GACjCD,EAASE,UAAUC,IAAI,gBACvBH,EAASI,UAAY,EACrBN,EAASO,YAAYL,GACrBhB,EAASsB,IAAInB,EAAaa,GAC1B,IACIO,EAAiB,QADXpB,EAAYqB,cACTC,IAAgB,MAAQ,KACrCtB,EAAYuB,MAAMC,cAAgB,OAClCvB,EAAQsB,MAAME,UAAY,eAAiBL,EAAK,MAAQjB,EAAiB,kBAEzEG,EAAc,SAAUN,EAAaC,GACrC,IAAIyB,EAAQ7B,EAAS8B,IAAI3B,GACrB0B,IACA7B,EAAS+B,OAAO5B,GAChB0B,EAAMG,UAEV7B,EAAYuB,MAAMC,cAAgB,GAClCvB,EAAQsB,MAAME,UAAY,IAuB1BK,EAAgB,6BAuDhBC,EAAiB,SAAUC,EAAWC,EAAaC,EAAgBC,GAEnE,IAAIC,EAAWJ,EAAUK,IACrBC,EAAcN,EAAUO,OAExBC,EAAiBP,EAAYI,IAG7BI,EAAcD,EAAiB,GAG/BE,EAFqC,IAHjBC,KAAKC,IAAIX,EAAYM,OAAQJ,EAAiBD,GAK9BI,EACpCO,EAAgBJ,EAAcL,EAE9BU,EAAsBH,KAAKI,MAAOL,EAAmB,GAClDA,EACAG,EAAgB,GACZA,EACD,GAGNG,EAAeL,KAAKC,IAAIE,EAAqBV,EAAWI,GAExDS,EADWN,KAAKO,IAAIF,GA3BF,GA8BtB,MAAO,CACHA,aAAcA,EACdG,eAHiBR,KAAKC,IAAI,IAAKD,KAAKS,IAAI,IAAKH,IAI7CI,cAAenB,EACfoB,WAAwC,GAA1BlB,EAAWK,KA+B7Bc,EAAa,SAAUvD,EAAaC,EAASuD,EAAWC,EAAUvB,GAAkB,OAAO,iBAAU,OAAQ,OAAQ,GAAQ,WAC7H,IAAIwB,EAAYC,EAAwBC,EAAiBC,EAA+BC,EAAUC,EAClG,OAAO,YAAYC,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EACD,OAAKV,GAAcC,GAGnBC,EAxEI,SAAU1D,EAAawD,EAAWtB,GAClD,IAAIiC,EAASnE,EAAYoE,QAAQ,wBAA0BpE,EAC3D,OAAO+B,EAAeoC,EAAOE,wBAAyBb,EAAUa,wBAAyBnC,EAAgBlC,EAAYqB,cAAciD,YAAYC,aAsEtHC,CAAcxE,EAAcwD,GAAaC,EAAWvB,GAC7DsB,GAAab,KAAKO,IAAIQ,EAAWV,cAAgB,GAGjD/C,EAAQwE,QACD,CAAC,KAKZ1E,EAAcC,EAAaC,GAAS,EAAMyD,EAAWJ,YACrDrD,EAAQwE,QACgB,oBAAXC,OAAgC,CAAC,EAAa,IAC3Dd,EAAkB,WAAc,OAAO,iBAAU,OAAQ,OAAQ,GAAQ,WACrE,OAAO,YAAYI,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EAOD,YAL+BS,IAA3BhB,GACAiB,aAAajB,GAEjBe,OAAOG,oBAAoB,qBAAsBhB,GACjDa,OAAOG,oBAAoB,qBAAsBjB,GAC5CJ,EACE,CAAC,EAAaA,EAAUsB,cAAc,EAAGpB,EAAWV,aAAcU,EAAWP,iBAD7D,CAAC,EAAa,GAEzC,KAAK,EACDc,EAAGc,OACHd,EAAGC,MAAQ,EACf,KAAK,EAMD,OAHAnE,EAAcC,EAAaC,GAAS,EAAOyD,EAAWJ,YAEtDrD,EAAQwE,QACD,CAAC,WAIxBZ,EAAgC,WAC5Ba,OAAOG,oBAAoB,qBAAsBhB,GACjDa,OAAOM,iBAAiB,qBAAsBpB,IAE7CJ,EACE,CAAC,EAAaA,EAAUyB,oBADR,CAAC,EAAa,MA5C1B,CAAC,GA8ChB,KAAK,EAGD,GAFAnB,EAAWG,EAAGc,OACdhB,EAAoBD,EAASoB,aAAepB,EAASqB,aACjDzB,EAAWV,aAAgBe,EAAoBD,EAASsB,UAqBxD,MAfqB,aAAjBnF,EAAQoF,MAER3B,EAAWV,cAAgB,GAC3B0B,OAAOM,iBAAiB,qBAAsBnB,IAG9Ca,OAAOM,iBAAiB,qBAAsBpB,GAQlDD,EAAyB2B,WAAW1B,EAAiB,KAC9C,CAAC,GAEZK,EAAGC,MAAQ,EACf,KAAK,EACDN,IACAK,EAAGC,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,WAIxBqB,EAAkB,SAAUC,EAAWC,EAAYC,GACnD,GAAID,GAAcC,EAAU,CACxB,IAAIC,EAAUF,EAAWG,EAAIF,EAASE,EAClCC,EAAUJ,EAAWK,EAAIJ,EAASI,EAEtC,OADeH,EAASA,EAASE,EAASA,EACvBL,EAAYA,EAEnC,OAAO,GAkBPO,EAAmB,SAAUvF,EAAO0B,GACpC,GAAsB,UAAlB1B,EAAMwF,WAGNxF,EAAMyF,eAAiD,cAAhCzF,EAAMyF,cAAcD,SAG3CxF,EAAMyF,eACNzF,EAAMyF,cAAcA,eAC0B,kBAA9CzF,EAAMyF,cAAcA,cAAcD,SAFtC,CAKA,IAAIE,EAAK1F,EAAM4D,QAAQ,eACvB,GAAW,OAAP8B,EAAJ,CAGA,IAAIC,EAAQD,EAAoB,iBAC5BC,GACAvB,aAAauB,GAEbjE,EAAiB,EACjBgE,EAAG3E,MAAM6E,YAAY,oBAAqBlE,EAAiB,MAG3DgE,EAAoB,iBAAIZ,YAAW,WAC/BY,EAAG3E,MAAM6E,YAAY,oBAAqB,SAC3C,QAKPC,EAAkB,SAAUC,GAC5B,IAAIC,EAAMC,SACNtE,EAAiBoE,EAAOG,UAAU,iBAAkB,KACpDC,EAAeJ,EAAOK,WAAW,gBAAgB,GACjDC,EAAYN,EAAOK,WAAW,qBAAqB,GACnDE,EAAgBP,EAAOK,WAAW,iBAAiB,GACnDtD,EAAgBiD,EAAOK,WAAW,iBAAiB,GACnDG,EAASC,MAAMC,KAAKT,EAAIU,iBAAiB,4BACzCC,EAAe,IAAIpH,QACnBqH,EAAkB,IAAIrH,QACtBsH,EAAgB,SAAUpH,GAAe,OAAO,iBAAU,OAAQ,OAAQ,GAAQ,WAClF,IAAIqH,EAAWpH,EAAS6D,EAAUL,EAAgB6D,EAClD,OAAO,YAAYtD,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EACD,OAAKlE,EAAYuH,iBACV,CAAC,EAAavH,EAAYuH,oBADS,CAAC,EAAa,GAE5D,KAAK,EACDtD,EAAGc,OACHd,EAAGC,MAAQ,EACf,KAAK,EAKD,OAJAmD,EAAYrH,EAAYwH,YAAcxH,EACtCC,EAAUoH,EAAUI,cAAc,UAAYJ,EAAUI,cAAc,YACtE3D,EAAW9D,EAAYoE,QAAQ,eAC/BX,EAAaK,EAAgD,KAApC9D,EAAYoE,QAAQ,cACxCnE,GAGC6D,GAAY8C,IAAcM,EAAa9G,IAAIJ,KAC7CsH,EAnTM,SAAUtH,EAAaC,EAAS6D,GAC1D,IAAKA,IAAa7D,EACd,OAAO,aAEX,IAAIyH,EAAkB,SAAUC,GACxBpH,EAAUN,IACVF,EAAcC,EAAaC,EAAS0H,IAGxCC,EAAS,WAAc,OAAO7H,EAAcC,EAAaC,GAAS,IAClE2G,EAAY,WAAc,OAAOc,GAAgB,IACjDG,EAAY,WAAc,OAAOH,GAAgB,IAIrD,OAHA5D,EAASkB,iBAAiB,iBAAkB4B,GAC5C9C,EAASkB,iBAAiB,eAAgB6C,GAC1C5H,EAAQ+E,iBAAiB,OAAQ4C,GAC1B,WACH9D,EAASe,oBAAoB,iBAAkB+B,GAC/C9C,EAASe,oBAAoB,eAAgBgD,GAC7C5H,EAAQ+E,iBAAiB,UAAW4C,IAiSbE,CAAwB9H,EAAaC,EAAS6D,GACrDoD,EAAa/F,IAAInB,EAAasH,KAE3BxD,GAAcL,IAAaiD,IAAiBS,EAAgB/G,IAAIJ,KACnEsH,EA3MC,SAAUtH,EAAaC,EAASuD,EAAWC,EAAUvB,GAC1E,IAAI6F,EACAC,EAAa,SAAUC,GACvBF,EAAQ,YAAaE,IAErBC,EAAW,SAAUD,GAErB,GAAKF,EAAL,CAIA,IAAIrC,EAAW,YAAauC,GAGvB1C,EAAgB,EAAGwC,EAAOrC,IAAcnF,EAAUN,KACnDgI,EAAGE,iBACHF,EAAGG,kBAEH7E,EAAWvD,EAAaC,EAASuD,EAAWC,EAAUvB,MAK9D,OAFAlC,EAAYgF,iBAAiB,aAAcgD,GAAY,GACvDhI,EAAYgF,iBAAiB,WAAYkD,GAAU,GAC5C,WACHlI,EAAY6E,oBAAoB,aAAcmD,GAAY,GAC1DhI,EAAY6E,oBAAoB,WAAYqD,GAAU,IAkL/BG,CAAmBrI,EAAaC,EAAS6D,EAAUL,EAAUvB,GACpEiF,EAAgBhG,IAAInB,EAAasH,IAE9B,CAAC,IAVG,CAAC,WA8BxBT,GAxTkB,WACtB,IAAIyB,GAAU,EACVC,GAAY,EACZhC,EAAMC,SACNgC,EAAW,WACXD,GAAY,GAEZE,EAAY,WACZH,GAAU,GAEVI,EAAa,SAAUT,GAEvB,GAAIM,EACAA,GAAY,MADhB,CAIA,IAAII,EAASpC,EAAI7F,cACjB,GAAKiI,IAIDA,EAAOC,QAAQ9G,GAAnB,CAIA,IAAI+G,EAASZ,EAAGa,OACZD,IAAWF,IAGXE,EAAOD,QAAQ9G,IAAkB+G,EAAOzE,QAAQtC,KAGpDwG,GAAU,EAEVhD,YAAW,WACFgD,GACDK,EAAOI,SAEZ,SAEPxC,EAAIvB,iBAAiB,iBAAkBwD,GACvCjC,EAAIvB,iBAAiB,UAAWyD,GAAW,GAC3ClC,EAAIvB,iBAAiB,WAAY0D,GAAY,GA+QzCM,GAEA3F,GAzGkB,SAAUnB,GAChC,IAAIqE,EAAMC,SACNiC,EAAY,SAAUR,GACtBlC,EAAiBkC,EAAGa,OAAQ5G,IAE5B+G,EAAa,SAAUhB,GACvBlC,EAAiBkC,EAAGa,OAAQ,IAEhCvC,EAAIvB,iBAAiB,UAAWyD,GAChClC,EAAIvB,iBAAiB,WAAYiE,GAiG7BC,CAAoBhH,GAKxB,IAAK,IAAIiH,EAAK,EAAGC,EAAWtC,EAAQqC,EAAKC,EAASC,OAAQF,IAAM,CAC5D,IAAI3I,EAAQ4I,EAASD,GACrB/B,EAAc5G,GAElB+F,EAAIvB,iBAAiB,mBAAmB,SAAWiD,GAC/Cb,EAAca,EAAGqB,WAErB/C,EAAIvB,iBAAiB,qBAAqB,SAAWiD,IAhC/B,SAAUjI,GAExB,IAOIuJ,EARJ3C,KACI2C,EAAKrC,EAAavF,IAAI3B,KAEtBuJ,IAEJrC,EAAatF,OAAO5B,IAEpB0G,KACI6C,EAAKpC,EAAgBxF,IAAI3B,KAEzBuJ,IAEJpC,EAAgBvF,OAAO5B,IAoB3BwJ,CAAgBvB,EAAGqB","file":"47.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { p as pointerCoord } from './helpers-5c745fbd.js';\nvar cloneMap = new WeakMap();\nvar relocateInput = function (componentEl, inputEl, shouldRelocate, inputRelativeY) {\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nvar isFocused = function (input) {\n    return input === input.getRootNode().activeElement;\n};\nvar addClone = function (componentEl, inputEl, inputRelativeY) {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    var parentEl = inputEl.parentNode;\n    // DOM WRITES\n    var clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    var doc = componentEl.ownerDocument;\n    var tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\n};\nvar removeClone = function (componentEl, inputEl) {\n    var clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\nvar enableHideCaretOnScroll = function (componentEl, inputEl, scrollEl) {\n    if (!scrollEl || !inputEl) {\n        return function () { return; };\n    }\n    var scrollHideCaret = function (shouldHideCaret) {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\n    var hideCaret = function () { return scrollHideCaret(true); };\n    var showCaret = function () { return scrollHideCaret(false); };\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return function () {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n};\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\nvar enableInputBlurring = function () {\n    var focused = true;\n    var didScroll = false;\n    var doc = document;\n    var onScroll = function () {\n        didScroll = true;\n    };\n    var onFocusin = function () {\n        focused = true;\n    };\n    var onTouchend = function (ev) {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        var active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        var tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO: find a better way, why 50ms?\n        setTimeout(function () {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return function () {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\nvar SCROLL_ASSIST_SPEED = 0.3;\nvar getScrollData = function (componentEl, contentEl, keyboardHeight) {\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nvar calcScrollData = function (inputRect, contentRect, keyboardHeight, platformHeight) {\n    // compute input's Y values relative to the body\n    var inputTop = inputRect.top;\n    var inputBottom = inputRect.bottom;\n    // compute visible area\n    var visibleAreaTop = contentRect.top;\n    var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    var safeAreaTop = visibleAreaTop + 15;\n    var safeAreaBottom = visibleAreaBottom * 0.75;\n    // figure out if each edge of the input is within the safe area\n    var distanceToBottom = safeAreaBottom - inputBottom;\n    var distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    var desiredScrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    var distance = Math.abs(scrollAmount);\n    var duration = distance / SCROLL_ASSIST_SPEED;\n    var scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount: scrollAmount,\n        scrollDuration: scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n};\nvar enableScrollAssist = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\n    var coord;\n    var touchStart = function (ev) {\n        coord = pointerCoord(ev);\n    };\n    var touchEnd = function (ev) {\n        // input cover touchend/mouseup\n        if (!coord) {\n            return;\n        }\n        // get where the touchend/mouseup ended\n        var endCoord = pointerCoord(ev);\n        // focus this input if the pointer hasn't moved XX pixels\n        // and the input doesn't already have focus\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // begin the input focus process\n            jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return function () {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n};\nvar jsSetFocus = function (componentEl, inputEl, contentEl, footerEl, keyboardHeight) { return __awaiter(void 0, void 0, void 0, function () {\n    var scrollData, scrollContentTimeout_1, scrollContent_1, doubleKeyboardEventListener_1, scrollEl, totalScrollAmount;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!contentEl && !footerEl) {\n                    return [2 /*return*/];\n                }\n                scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n                if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n                    // the text input is in a safe position that doesn't\n                    // require it to be scrolled into view, just set focus now\n                    inputEl.focus();\n                    return [2 /*return*/];\n                }\n                // temporarily move the focus to the focus holder so the browser\n                // doesn't freak out while it's trying to get the input in place\n                // at this point the native text input still does not have focus\n                relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n                inputEl.focus();\n                if (!(typeof window !== 'undefined')) return [3 /*break*/, 3];\n                scrollContent_1 = function () { return __awaiter(void 0, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                // clean up listeners and timeouts\n                                if (scrollContentTimeout_1 !== undefined) {\n                                    clearTimeout(scrollContentTimeout_1);\n                                }\n                                window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\n                                window.removeEventListener('ionKeyboardDidShow', scrollContent_1);\n                                if (!contentEl) return [3 /*break*/, 2];\n                                return [4 /*yield*/, contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration)];\n                            case 1:\n                                _a.sent();\n                                _a.label = 2;\n                            case 2:\n                                // the scroll view is in the correct position now\n                                // give the native text input focus\n                                relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n                                // ensure this is the focused input\n                                inputEl.focus();\n                                return [2 /*return*/];\n                        }\n                    });\n                }); };\n                doubleKeyboardEventListener_1 = function () {\n                    window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\n                    window.addEventListener('ionKeyboardDidShow', scrollContent_1);\n                };\n                if (!contentEl) return [3 /*break*/, 2];\n                return [4 /*yield*/, contentEl.getScrollElement()];\n            case 1:\n                scrollEl = _a.sent();\n                totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n                if (scrollData.scrollAmount > (totalScrollAmount - scrollEl.scrollTop)) {\n                    /**\n                     * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n                     * after the initial keyboard is shown. This prevents the webview from resizing\n                     * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n                     */\n                    if (inputEl.type === 'password') {\n                        // Add 50px to account for the \"Passwords\" bar\n                        scrollData.scrollAmount += 50;\n                        window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener_1);\n                    }\n                    else {\n                        window.addEventListener('ionKeyboardDidShow', scrollContent_1);\n                    }\n                    /**\n                     * This should only fire in 2 instances:\n                     * 1. The app is very slow.\n                     * 2. The app is running in a browser on an old OS\n                     * that does not support Ionic Keyboard Events\n                     */\n                    scrollContentTimeout_1 = setTimeout(scrollContent_1, 1000);\n                    return [2 /*return*/];\n                }\n                _a.label = 2;\n            case 2:\n                scrollContent_1();\n                _a.label = 3;\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nvar hasPointerMoved = function (threshold, startCoord, endCoord) {\n    if (startCoord && endCoord) {\n        var deltaX = (startCoord.x - endCoord.x);\n        var deltaY = (startCoord.y - endCoord.y);\n        var distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n};\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nvar enableScrollPadding = function (keyboardHeight) {\n    var doc = document;\n    var onFocusin = function (ev) {\n        setScrollPadding(ev.target, keyboardHeight);\n    };\n    var onFocusout = function (ev) {\n        setScrollPadding(ev.target, 0);\n    };\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return function () {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n};\nvar setScrollPadding = function (input, keyboardHeight) {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    if (input.parentElement &&\n        input.parentElement.parentElement &&\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n        return;\n    }\n    var el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    var timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n};\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nvar startInputShims = function (config) {\n    var doc = document;\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\n    var scrollAssist = config.getBoolean('scrollAssist', true);\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    var inputBlurring = config.getBoolean('inputBlurring', true);\n    var scrollPadding = config.getBoolean('scrollPadding', true);\n    var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    var hideCaretMap = new WeakMap();\n    var scrollAssistMap = new WeakMap();\n    var registerInput = function (componentEl) { return __awaiter(void 0, void 0, void 0, function () {\n        var inputRoot, inputEl, scrollEl, footerEl, rmFn, rmFn;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!componentEl.componentOnReady) return [3 /*break*/, 2];\n                    return [4 /*yield*/, componentEl.componentOnReady()];\n                case 1:\n                    _a.sent();\n                    _a.label = 2;\n                case 2:\n                    inputRoot = componentEl.shadowRoot || componentEl;\n                    inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n                    scrollEl = componentEl.closest('ion-content');\n                    footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\n                    if (!inputEl) {\n                        return [2 /*return*/];\n                    }\n                    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n                        rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n                        hideCaretMap.set(componentEl, rmFn);\n                    }\n                    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n                        rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n                        scrollAssistMap.set(componentEl, rmFn);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var unregisterInput = function (componentEl) {\n        if (hideCaret) {\n            var fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (scrollAssist) {\n            var fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(keyboardHeight);\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', (function (ev) {\n        registerInput(ev.detail);\n    }));\n    doc.addEventListener('ionInputDidUnload', (function (ev) {\n        unregisterInput(ev.detail);\n    }));\n};\nexport { startInputShims };\n"],"sourceRoot":""}