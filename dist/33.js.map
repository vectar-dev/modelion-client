{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-backdrop.entry.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/gesture-controller-89173521.js"],"names":["Backdrop","hostRef","this","ionBackdropTap","blocker","createBlocker","disableScroll","visible","tappable","stopPropagation","prototype","connectedCallback","block","disconnectedCallback","unblock","onMouseDown","ev","emitTap","preventDefault","emit","render","_a","mode","tabindex","class","style","ios","md","GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","GestureDelegate","newID","name","priority","opts","BlockerDelegate","disable","start","gestureName","id","canStart","set","delete","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","_i","length","gesture","GESTURE_CONTROLLER"],"mappings":"0FAAA,+EAKIA,EAA0B,WAC1B,SAASA,EAASC,GACd,YAAiBC,KAAMD,GACvBC,KAAKC,eAAiB,YAAYD,KAAM,iBAAkB,GAC1DA,KAAKE,QAAU,IAAmBC,cAAc,CAC5CC,eAAe,IAKnBJ,KAAKK,SAAU,EAIfL,KAAKM,UAAW,EAIhBN,KAAKO,iBAAkB,EA+B3B,OA7BAT,EAASU,UAAUC,kBAAoB,WAC/BT,KAAKO,iBACLP,KAAKE,QAAQQ,SAGrBZ,EAASU,UAAUG,qBAAuB,WACtCX,KAAKE,QAAQU,WAEjBd,EAASU,UAAUK,YAAc,SAAUC,GACvCd,KAAKe,QAAQD,IAEjBhB,EAASU,UAAUO,QAAU,SAAUD,GAC/Bd,KAAKO,kBACLO,EAAGE,iBACHF,EAAGP,mBAEHP,KAAKM,UACLN,KAAKC,eAAegB,QAG5BnB,EAASU,UAAUU,OAAS,WACxB,IAAIC,EACAC,EAAO,YAAWpB,MACtB,OAAQ,WAAD,CAAG,IAAM,CAAEqB,SAAU,KAAMC,OAAQH,EAAK,GACvCA,EAAGC,IAAQ,EACXD,EAAG,kBAAoBnB,KAAKK,QAC5Bc,EAAG,yBAA2BnB,KAAKM,SACnCa,MAELrB,EAjDkB,GAmD7BA,EAASyB,MAAQ,CACbC,IAtDiB,yWAuDjBC,GAtDgB,2W,gCCJpB,sCAAIC,EAAmC,WACnC,SAASA,IACL1B,KAAK2B,UAAY,EACjB3B,KAAK4B,eAAiB,IAAIC,IAC1B7B,KAAK8B,iBAAmB,IAAID,IAC5B7B,KAAK+B,eAAiB,IAAIC,IAqG9B,OAhGAN,EAAkBlB,UAAUyB,cAAgB,SAAUC,GAClD,OAAO,IAAIC,EAAgBnC,KAAMA,KAAKoC,QAASF,EAAOG,KAAMH,EAAOI,UAAY,IAAKJ,EAAO9B,gBAK/FsB,EAAkBlB,UAAUL,cAAgB,SAAUoC,GAElD,YADa,IAATA,IAAmBA,EAAO,IACvB,IAAIC,EAAgBxC,KAAMA,KAAKoC,QAASG,EAAKE,UAAWF,EAAKnC,gBAExEsB,EAAkBlB,UAAUkC,MAAQ,SAAUC,EAAaC,EAAIN,GAC3D,OAAKtC,KAAK6C,SAASF,IAInB3C,KAAK4B,eAAekB,IAAIF,EAAIN,IACrB,IAJHtC,KAAK4B,eAAemB,OAAOH,IACpB,IAKflB,EAAkBlB,UAAUwC,QAAU,SAAUL,EAAaC,EAAIN,GAC7D,IAAKtC,KAAK0C,MAAMC,EAAaC,EAAIN,GAC7B,OAAO,EAEX,IAAIV,EAAiB5B,KAAK4B,eACtBqB,GAAe,IAInB,GAHArB,EAAesB,SAAQ,SAAUC,GAC7BF,EAAcG,KAAKC,IAAIJ,EAAaE,MAEpCF,IAAgBX,EAAU,CAC1BtC,KAAKsD,WAAaV,EAClBhB,EAAe2B,QACf,IAAIC,EAAQ,IAAIC,YAAY,qBAAsB,CAAEC,OAAQ,CAAEf,YAAaA,KAE3E,OADAgB,SAASC,cAAcJ,IAChB,EAGX,OADA5B,EAAemB,OAAOH,IACf,GAEXlB,EAAkBlB,UAAUqD,QAAU,SAAUjB,GAC5C5C,KAAK4B,eAAemB,OAAOH,GACvB5C,KAAKsD,aAAeV,IACpB5C,KAAKsD,gBAAaQ,IAG1BpC,EAAkBlB,UAAUuD,eAAiB,SAAUpB,EAAaC,GAChE,IAAIE,EAAM9C,KAAK8B,iBAAiBkC,IAAIrB,QACxBmB,IAARhB,IACAA,EAAM,IAAId,IACVhC,KAAK8B,iBAAiBgB,IAAIH,EAAaG,IAE3CA,EAAImB,IAAIrB,IAEZlB,EAAkBlB,UAAU0D,cAAgB,SAAUvB,EAAaC,GAC/D,IAAIE,EAAM9C,KAAK8B,iBAAiBkC,IAAIrB,QACxBmB,IAARhB,GACAA,EAAIC,OAAOH,IAGnBlB,EAAkBlB,UAAUJ,cAAgB,SAAUwC,GAClD5C,KAAK+B,eAAekC,IAAIrB,GACS,IAA7B5C,KAAK+B,eAAeoC,MACpBR,SAASS,KAAKC,UAAUJ,IAAIK,IAGpC5C,EAAkBlB,UAAU+D,aAAe,SAAU3B,GACjD5C,KAAK+B,eAAegB,OAAOH,GACM,IAA7B5C,KAAK+B,eAAeoC,MACpBR,SAASS,KAAKC,UAAUG,OAAOF,IAGvC5C,EAAkBlB,UAAUqC,SAAW,SAAUF,GAC7C,YAAwBmB,IAApB9D,KAAKsD,aAILtD,KAAKyE,WAAW9B,IAKxBjB,EAAkBlB,UAAUkE,WAAa,WACrC,YAA2BZ,IAApB9D,KAAKsD,YAEhB5B,EAAkBlB,UAAUmE,iBAAmB,WAC3C,OAAO3E,KAAK+B,eAAeoC,KAAO,GAEtCzC,EAAkBlB,UAAUiE,WAAa,SAAU9B,GAC/C,IAAIiC,EAAW5E,KAAK8B,iBAAiBkC,IAAIrB,GACzC,SAAIiC,GAAYA,EAAST,KAAO,IAKpCzC,EAAkBlB,UAAU4B,MAAQ,WAEhC,OADApC,KAAK2B,YACE3B,KAAK2B,WAETD,EA1G2B,GA4GlCS,EAAiC,WACjC,SAASA,EAAgB0C,EAAMjC,EAAIP,EAAMC,EAAUlC,GAC/CJ,KAAK4C,GAAKA,EACV5C,KAAKqC,KAAOA,EACZrC,KAAKI,cAAgBA,EACrBJ,KAAKsC,SAAsB,IAAXA,EAAqBM,EACrC5C,KAAK6E,KAAOA,EAoChB,OAlCA1C,EAAgB3B,UAAUqC,SAAW,WACjC,QAAK7C,KAAK6E,MAGH7E,KAAK6E,KAAKhC,SAAS7C,KAAKqC,OAEnCF,EAAgB3B,UAAUkC,MAAQ,WAC9B,QAAK1C,KAAK6E,MAGH7E,KAAK6E,KAAKnC,MAAM1C,KAAKqC,KAAMrC,KAAK4C,GAAI5C,KAAKsC,WAEpDH,EAAgB3B,UAAUwC,QAAU,WAChC,IAAKhD,KAAK6E,KACN,OAAO,EAEX,IAAIC,EAAW9E,KAAK6E,KAAK7B,QAAQhD,KAAKqC,KAAMrC,KAAK4C,GAAI5C,KAAKsC,UAI1D,OAHIwC,GAAY9E,KAAKI,eACjBJ,KAAK6E,KAAKzE,cAAcJ,KAAK4C,IAE1BkC,GAEX3C,EAAgB3B,UAAUqD,QAAU,WAC5B7D,KAAK6E,OACL7E,KAAK6E,KAAKhB,QAAQ7D,KAAK4C,IACnB5C,KAAKI,eACLJ,KAAK6E,KAAKN,aAAavE,KAAK4C,MAIxCT,EAAgB3B,UAAUuE,QAAU,WAChC/E,KAAK6D,UACL7D,KAAK6E,UAAOf,GAET3B,EA1CyB,GA4ChCK,EAAiC,WACjC,SAASA,EAAgBqC,EAAMjC,EAAIH,EAASrC,GACxCJ,KAAK4C,GAAKA,EACV5C,KAAKyC,QAAUA,EACfzC,KAAKI,cAAgBA,EACrBJ,KAAK6E,KAAOA,EAkChB,OAhCArC,EAAgBhC,UAAUE,MAAQ,WAC9B,GAAKV,KAAK6E,KAAV,CAGA,GAAI7E,KAAKyC,QACL,IAAK,IAAIuC,EAAK,EAAG7D,EAAKnB,KAAKyC,QAASuC,EAAK7D,EAAG8D,OAAQD,IAAM,CACtD,IAAIE,EAAU/D,EAAG6D,GACjBhF,KAAK6E,KAAKd,eAAemB,EAASlF,KAAK4C,IAG3C5C,KAAKI,eACLJ,KAAK6E,KAAKzE,cAAcJ,KAAK4C,MAGrCJ,EAAgBhC,UAAUI,QAAU,WAChC,GAAKZ,KAAK6E,KAAV,CAGA,GAAI7E,KAAKyC,QACL,IAAK,IAAIuC,EAAK,EAAG7D,EAAKnB,KAAKyC,QAASuC,EAAK7D,EAAG8D,OAAQD,IAAM,CACtD,IAAIE,EAAU/D,EAAG6D,GACjBhF,KAAK6E,KAAKX,cAAcgB,EAASlF,KAAK4C,IAG1C5C,KAAKI,eACLJ,KAAK6E,KAAKN,aAAavE,KAAK4C,MAGpCJ,EAAgBhC,UAAUuE,QAAU,WAChC/E,KAAKY,UACLZ,KAAK6E,UAAOf,GAETtB,EAvCyB,GAyChC8B,EAAqB,qBACrBa,EAAqB,IAAIzD","file":"33.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-89173521.js';\nvar backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nvar backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nvar Backdrop = /** @class */ (function () {\n    function Backdrop(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n        this.blocker = GESTURE_CONTROLLER.createBlocker({\n            disableScroll: true\n        });\n        /**\n         * If `true`, the backdrop will be visible.\n         */\n        this.visible = true;\n        /**\n         * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n         */\n        this.tappable = true;\n        /**\n         * If `true`, the backdrop will stop propagation on tap.\n         */\n        this.stopPropagation = true;\n    }\n    Backdrop.prototype.connectedCallback = function () {\n        if (this.stopPropagation) {\n            this.blocker.block();\n        }\n    };\n    Backdrop.prototype.disconnectedCallback = function () {\n        this.blocker.unblock();\n    };\n    Backdrop.prototype.onMouseDown = function (ev) {\n        this.emitTap(ev);\n    };\n    Backdrop.prototype.emitTap = function (ev) {\n        if (this.stopPropagation) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        if (this.tappable) {\n            this.ionBackdropTap.emit();\n        }\n    };\n    Backdrop.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { tabindex: \"-1\", class: (_a = {},\n                _a[mode] = true,\n                _a['backdrop-hide'] = !this.visible,\n                _a['backdrop-no-tappable'] = !this.tappable,\n                _a) }));\n    };\n    return Backdrop;\n}());\nBackdrop.style = {\n    ios: backdropIosCss,\n    md: backdropMdCss\n};\nexport { Backdrop as ion_backdrop };\n","var GestureController = /** @class */ (function () {\n    function GestureController() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    GestureController.prototype.createGesture = function (config) {\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    };\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    GestureController.prototype.createBlocker = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    };\n    GestureController.prototype.start = function (gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    };\n    GestureController.prototype.capture = function (gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        var requestedStart = this.requestedStart;\n        var maxPriority = -10000;\n        requestedStart.forEach(function (value) {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            var event = new CustomEvent('ionGestureCaptured', { detail: { gestureName: gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    };\n    GestureController.prototype.release = function (id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    };\n    GestureController.prototype.disableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    };\n    GestureController.prototype.enableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    };\n    GestureController.prototype.disableScroll = function (id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.enableScroll = function (id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.canStart = function (gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    };\n    GestureController.prototype.isCaptured = function () {\n        return this.capturedId !== undefined;\n    };\n    GestureController.prototype.isScrollDisabled = function () {\n        return this.disabledScroll.size > 0;\n    };\n    GestureController.prototype.isDisabled = function (gestureName) {\n        var disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    };\n    GestureController.prototype.newID = function () {\n        this.gestureId++;\n        return this.gestureId;\n    };\n    return GestureController;\n}());\nvar GestureDelegate = /** @class */ (function () {\n    function GestureDelegate(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    GestureDelegate.prototype.canStart = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    };\n    GestureDelegate.prototype.start = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    };\n    GestureDelegate.prototype.capture = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        var captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    };\n    GestureDelegate.prototype.release = function () {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    };\n    GestureDelegate.prototype.destroy = function () {\n        this.release();\n        this.ctrl = undefined;\n    };\n    return GestureDelegate;\n}());\nvar BlockerDelegate = /** @class */ (function () {\n    function BlockerDelegate(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    BlockerDelegate.prototype.block = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.unblock = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.destroy = function () {\n        this.unblock();\n        this.ctrl = undefined;\n    };\n    return BlockerDelegate;\n}());\nvar BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nvar GESTURE_CONTROLLER = new GestureController();\nexport { GESTURE_CONTROLLER as G };\n"],"sourceRoot":""}