{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-split-pane.entry.js"],"names":["QUERY","SplitPane","hostRef","this","ionSplitPaneVisible","visible","disabled","when","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","render","_a","mode","class","Object","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove","style","ios","md"],"mappings":"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","file":"53.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nvar splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nvar splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nvar SplitPane = /** @class */ (function () {\n    function SplitPane(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n    }\n    SplitPane.prototype.visibleChanged = function (visible) {\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    };\n    SplitPane.prototype.connectedCallback = function () {\n        this.styleChildren();\n        this.updateState();\n    };\n    SplitPane.prototype.disconnectedCallback = function () {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    };\n    SplitPane.prototype.updateState = function () {\n        var _this = this;\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        var query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        var mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            var callback_1 = function (q) {\n                _this.visible = q.matches;\n            };\n            var mediaList_1 = window.matchMedia(mediaQuery);\n            mediaList_1.addListener(callback_1);\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\n            this.visible = mediaList_1.matches;\n        }\n    };\n    SplitPane.prototype.isPane = function (element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    };\n    SplitPane.prototype.styleChildren = function () {\n        var contentId = this.contentId;\n        var children = this.el.children;\n        var nu = this.el.childElementCount;\n        var foundMain = false;\n        for (var i = 0; i < nu; i++) {\n            var child = children[i];\n            var isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    };\n    SplitPane.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: (_a = {},\n                _a[mode] = true,\n                // Used internally for styling\n                _a[\"split-pane-\" + mode] = true,\n                _a['split-pane-visible'] = this.visible,\n                _a) }, h(\"slot\", null)));\n    };\n    Object.defineProperty(SplitPane.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"watchers\", {\n        get: function () {\n            return {\n                \"visible\": [\"visibleChanged\"],\n                \"disabled\": [\"updateState\"],\n                \"when\": [\"updateState\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return SplitPane;\n}());\nvar setPaneClass = function (el, isMain) {\n    var toAdd;\n    var toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    var classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nSplitPane.style = {\n    ios: splitPaneIosCss,\n    md: splitPaneMdCss\n};\nexport { SplitPane as ion_split_pane };\n"],"sourceRoot":""}